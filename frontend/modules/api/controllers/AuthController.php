<?php

namespace frontend\modules\api\controllers;

use frontend\models\LoginForm;
use frontend\modules\api\services\AuthService;
use yii\filters\AccessControl;
use yii\helpers\ArrayHelper;
use yii\filters\VerbFilter;
use Yii;
use yii\web\Response;

class AuthController extends BaseController
{
    /**
     * @var AuthService
     */
    private $service;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->service = new AuthService();
    }

    /**
     * @return array
     */
    public function behaviors()
    {
        return ArrayHelper::merge(
            [
                'access' => [
                    'class' => AccessControl::class,
                    'only' => [
                        'logout',
                    ],
                    'rules' => [
                        [
                            'allow' => true,
                            'roles' => ['?'],
                        ],
                    ],
                ],
                'verbs' => [
                    'class' => VerbFilter::class,
                    'actions' => [
                        'logout' => ['post'],
                    ],
                ],
            ],
            parent::behaviors()
        );
    }

    public function actionIndex()
    {
        return ['state' => 200];
    }

    public function actionLogin()
    {
        if (!Yii::$app->user->isGuest) {
            throw new \Exception('user already logged in');
        }

        Yii::$app->session->regenerateID();
        $model = new LoginForm();
        $model->load(Yii::$app->request->post(), '');
        if (Yii::$app->request->isPost && $model->validate()) {
            return $this->service->login($model);
        }
        $error = $model->getFirstErrors();
        return [
            'code' => -1,
            'message' => array_pop($error)
        ];
    }

    public function actionLogout()
    {
        Yii::$app->session->removeAll();
        Yii::$app->response->getCookies()->removeAll();
        return [
            'logout' => Yii::$app->user->logout(),
        ];
    }
}
